version: '3'

services:
  postgres:
    container_name: postgres-db
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./postgredb:/var/lib/postgresql/data
    env_file: .env
    environment:
      - LC_ALL=C.UTF-8

  web:
    container_name: CryptoTrack
    build: .
    restart: always
    env_file: .env
    environment:
      - VIRTUAL_HOST=localhost, 209.38.64.49, track.intigam.online
      - VIRTUAL_PORT=8000
      - TIMEOUT=300
      - HTTP_PORT=8000
      - STATS_PORT=8001
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  celery_worker:
    container_name: celery_worker
    build: .
    command: /venv/bin/celery -A config.celery worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
    env_file: .env
    environment:
      - REDIS_HOST=redis

  celery_beat:
    container_name: celery_beat
    build: .
    command: /venv/bin/celery -A config.celery beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
    env_file: .env
    environment:
      - REDIS_HOST=redis
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  websocket:
      container_name: websocket
      build: .
      command: /venv/bin/python manage.py runserver 0.0.0.0:8001
      volumes:
        - .:/code
      ports:
        - "8001:8001"
      depends_on:
        - redis

networks:
    default:
      external:
        name: nginx-proxy

